name : CI/CD

on:
  push:
    branches:
      - config/github-actions
    pull_request:
      branches:
        - main

jobs:
  build-and-test-spring:
    name: Build and Test Spring Boot
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Build Spring Boot application
        run: |
          chmod +x gradlew
          ./gradlew clean build -x test

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-jar
          path: build/libs/*.jar

  build-and-push-docker-image:
    name: Build and Push Docker Image
    needs: build-and-test-spring
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/config/github-actions'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: spring-boot-jar
          path: .

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Get current date for image tag
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d%H%M%S')"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ongst52/giantmall:latest
            ongst52/giantmall:${{ steps.date.outputs.date }}
            

  deploy-to-server:
    name: Deploy to Remote Server
    needs: build-and-push-docker-image
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/config/github-actions'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: SSH to remote server and deploy
        uses: appleboy/ssh-action@v1.0.1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Connecting to remote server and deploying..."
            cd ./giantmall/GIANT-MALL-BE/
            
            git pull origin config/github-actions
            
            docker-compose pull
            docker-compose down
            docker-compose up -d
            
            echo "Deployment completed successfully"